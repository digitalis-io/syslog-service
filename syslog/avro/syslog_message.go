package avro

import "github.com/elodina/go-avro"

type SyslogMessage struct {
	Priority  int64
	Severity  int64
	Facility  int64
	Timestamp string
	Hostname  string
	Tag       interface{}
	Pid       interface{}
	Message   string
	Tags      map[string]string
}

func NewSyslogMessage() *SyslogMessage {
	return &SyslogMessage{
		Tags: make(map[string]string),
	}
}

func (this *SyslogMessage) Schema() avro.Schema {
	if _SyslogMessage_schema_err != nil {
		panic(_SyslogMessage_schema_err)
	}
	return _SyslogMessage_schema
}

// Generated by codegen. Please do not modify.
var _SyslogMessage_schema, _SyslogMessage_schema_err = avro.ParseSchema(`{
    "type": "record",
    "namespace": "avro",
    "name": "SyslogMessage",
    "fields": [
        {
            "name": "priority",
            "type": "long"
        },
        {
            "name": "severity",
            "type": "long"
        },
        {
            "name": "facility",
            "type": "long"
        },
        {
            "name": "timestamp",
            "type": "string"
        },
        {
            "name": "hostname",
            "type": "string"
        },
        {
            "name": "tag",
            "default": null,
            "type": [
                "null",
                "string"
            ]
        },
        {
            "name": "pid",
            "default": null,
            "type": [
                "null",
                "long"
            ]
        },
        {
            "name": "message",
            "type": "string"
        },
        {
            "name": "tags",
            "type": {
                "type": "map",
                "values": "string"
            }
        }
    ]
}`)
